---
- hosts: app
  become: yes
  vars:
    container_count: 4
    default_container_name: docker
    default_container_image: ubuntu
    default_container_command: sleep 1d
  tasks:
    - name: "Installing Docker Prerequisite packages"
      yum:
        name: "{{ item }}"
        state: latest
      with_items:
        - yum-utils
        - device-mapper-persistent-data
        - lvm2
      when: ansible_distribution == 'CentOS'

    - name: "Configuring docker-ce repo"
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo
        mode: 0644
      when: ansible_distribution == 'CentOS'

    - name: " Installing Docker latest version"
      yum:
        name: docker-ce
        state: present
      when: ansible_distribution == 'CentOS'

    - name: " Starting and Enabling Docker service"
      service:
        name: docker
        state: started
        enabled: yes
      when: ansible_distribution == 'CentOS'

    - name: Install aptitude for Ubuntu
      apt:
        name: aptitude 
        state: latest
        update_cache: true
      when: ansible_distribution == 'Ubuntu'

    - name: Install required system packages for Ubuntu
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true
      when: ansible_distribution == 'Ubuntu'

    - name: Add Docker GPG apt Key for Ubuntu
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: ansible_distribution == 'Ubuntu'

    - name: Add Docker Repository for Ubuntu
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present
      when: ansible_distribution == 'Ubuntu'

    - name: Update apt and install docker-ce for Ubuntu
      apt:
        name: docker-ce
        state: latest
        update_cache: true
      when: ansible_distribution == 'Ubuntu'
     
    - name: Install Docker Module for Python
      pip:
        name: docker
      when: ansible_distribution == 'Ubuntu'

    - name: Pull default Docker image
      community.docker.docker_image:
        name: "{{ default_container_image }}"
        source: pull
      when: ansible_distribution == 'Ubuntu'

    - name: Create default containers
      community.docker.docker_container:
        name: "{{ default_container_name }}{{ item }}"
        image: "{{ default_container_image }}"
        command: "{{ default_container_command }}"
        state: present
      with_sequence: count={{ container_count }}
      when: ansible_distribution == 'Ubuntu'
